// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: LynxaDeviceMessages.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
/// <summary>Holder for reflection information generated from LynxaDeviceMessages.proto</summary>
public static partial class LynxaDeviceMessagesReflection {

  #region Descriptor
  /// <summary>File descriptor for LynxaDeviceMessages.proto</summary>
  public static pbr::FileDescriptor Descriptor {
    get { return descriptor; }
  }
  private static pbr::FileDescriptor descriptor;

  static LynxaDeviceMessagesReflection() {
    byte[] descriptorData = global::System.Convert.FromBase64String(
        string.Concat(
          "ChlMeW54YURldmljZU1lc3NhZ2VzLnByb3RvGgxuYW5vcGIucHJvdG8iSAoO",
          "Tm1lYVJlY29yZF8xMDASEQoJdGltZXN0YW1wGAEgAigNEhAKCGxhdGl0dWRl",
          "GAIgAigCEhEKCWxvbmdpdHVkZRgDIAIoAiI/Cg5Mb2dNZXNzYWdlXzEwMRIR",
          "Cgl0aW1lc3RhbXAYASACKA0SGgoKbG9nTWVzc2FnZRgCIAIoCUIGkj8DcIAB",
          "IjEKC1dpZmlTdGF0aW9uEhQKBWJzc2lkGAEgAigMQgWSPwJwBhIMCgRyc3Np",
          "GAIgAigFIjgKCUNlbGxUb3dlchINCgV0ZW1wMRgBIAIoBRINCgV0ZW1wMhgC",
          "IAIoBRINCgV0ZW1wMxgDIAIoBSJ5ChpHb29nbGVMb2NhdGlvblNlcnZpY2Vz",
          "XzEwMhIRCgl0aW1lc3RhbXAYASACKA0SHQoJY2VsbHRvd2VyGAIgAigLMgou",
          "Q2VsbFRvd2VyEikKDHdpZmlzdGF0aW9ucxgDIAMoCzIMLldpZmlTdGF0aW9u",
          "QgWSPwIQCg=="));
    descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
        new pbr::FileDescriptor[] { global::NanopbReflection.Descriptor, },
        new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
          new pbr::GeneratedClrTypeInfo(typeof(global::NmeaRecord_100), global::NmeaRecord_100.Parser, new[]{ "Timestamp", "Latitude", "Longitude" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::LogMessage_101), global::LogMessage_101.Parser, new[]{ "Timestamp", "LogMessage" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::WifiStation), global::WifiStation.Parser, new[]{ "Bssid", "Rssi" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CellTower), global::CellTower.Parser, new[]{ "Temp1", "Temp2", "Temp3" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::GoogleLocationServices_102), global::GoogleLocationServices_102.Parser, new[]{ "Timestamp", "Celltower", "Wifistations" }, null, null, null, null)
        }));
  }
  #endregion

}
#region Messages
public sealed partial class NmeaRecord_100 : pb::IMessage<NmeaRecord_100>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<NmeaRecord_100> _parser = new pb::MessageParser<NmeaRecord_100>(() => new NmeaRecord_100());
  private pb::UnknownFieldSet _unknownFields;
  private int _hasBits0;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<NmeaRecord_100> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::LynxaDeviceMessagesReflection.Descriptor.MessageTypes[0]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public NmeaRecord_100() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public NmeaRecord_100(NmeaRecord_100 other) : this() {
    _hasBits0 = other._hasBits0;
    timestamp_ = other.timestamp_;
    latitude_ = other.latitude_;
    longitude_ = other.longitude_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public NmeaRecord_100 Clone() {
    return new NmeaRecord_100(this);
  }

  /// <summary>Field number for the "timestamp" field.</summary>
  public const int TimestampFieldNumber = 1;
  private readonly static uint TimestampDefaultValue = 0;

  private uint timestamp_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public uint Timestamp {
    get { if ((_hasBits0 & 1) != 0) { return timestamp_; } else { return TimestampDefaultValue; } }
    set {
      _hasBits0 |= 1;
      timestamp_ = value;
    }
  }
  /// <summary>Gets whether the "timestamp" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool HasTimestamp {
    get { return (_hasBits0 & 1) != 0; }
  }
  /// <summary>Clears the value of the "timestamp" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void ClearTimestamp() {
    _hasBits0 &= ~1;
  }

  /// <summary>Field number for the "latitude" field.</summary>
  public const int LatitudeFieldNumber = 2;
  private readonly static float LatitudeDefaultValue = 0F;

  private float latitude_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public float Latitude {
    get { if ((_hasBits0 & 2) != 0) { return latitude_; } else { return LatitudeDefaultValue; } }
    set {
      _hasBits0 |= 2;
      latitude_ = value;
    }
  }
  /// <summary>Gets whether the "latitude" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool HasLatitude {
    get { return (_hasBits0 & 2) != 0; }
  }
  /// <summary>Clears the value of the "latitude" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void ClearLatitude() {
    _hasBits0 &= ~2;
  }

  /// <summary>Field number for the "longitude" field.</summary>
  public const int LongitudeFieldNumber = 3;
  private readonly static float LongitudeDefaultValue = 0F;

  private float longitude_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public float Longitude {
    get { if ((_hasBits0 & 4) != 0) { return longitude_; } else { return LongitudeDefaultValue; } }
    set {
      _hasBits0 |= 4;
      longitude_ = value;
    }
  }
  /// <summary>Gets whether the "longitude" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool HasLongitude {
    get { return (_hasBits0 & 4) != 0; }
  }
  /// <summary>Clears the value of the "longitude" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void ClearLongitude() {
    _hasBits0 &= ~4;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as NmeaRecord_100);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(NmeaRecord_100 other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (Timestamp != other.Timestamp) return false;
    if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Latitude, other.Latitude)) return false;
    if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Longitude, other.Longitude)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (HasTimestamp) hash ^= Timestamp.GetHashCode();
    if (HasLatitude) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Latitude);
    if (HasLongitude) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Longitude);
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (HasTimestamp) {
      output.WriteRawTag(8);
      output.WriteUInt32(Timestamp);
    }
    if (HasLatitude) {
      output.WriteRawTag(21);
      output.WriteFloat(Latitude);
    }
    if (HasLongitude) {
      output.WriteRawTag(29);
      output.WriteFloat(Longitude);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (HasTimestamp) {
      output.WriteRawTag(8);
      output.WriteUInt32(Timestamp);
    }
    if (HasLatitude) {
      output.WriteRawTag(21);
      output.WriteFloat(Latitude);
    }
    if (HasLongitude) {
      output.WriteRawTag(29);
      output.WriteFloat(Longitude);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (HasTimestamp) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Timestamp);
    }
    if (HasLatitude) {
      size += 1 + 4;
    }
    if (HasLongitude) {
      size += 1 + 4;
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(NmeaRecord_100 other) {
    if (other == null) {
      return;
    }
    if (other.HasTimestamp) {
      Timestamp = other.Timestamp;
    }
    if (other.HasLatitude) {
      Latitude = other.Latitude;
    }
    if (other.HasLongitude) {
      Longitude = other.Longitude;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          Timestamp = input.ReadUInt32();
          break;
        }
        case 21: {
          Latitude = input.ReadFloat();
          break;
        }
        case 29: {
          Longitude = input.ReadFloat();
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 8: {
          Timestamp = input.ReadUInt32();
          break;
        }
        case 21: {
          Latitude = input.ReadFloat();
          break;
        }
        case 29: {
          Longitude = input.ReadFloat();
          break;
        }
      }
    }
  }
  #endif

}

public sealed partial class LogMessage_101 : pb::IMessage<LogMessage_101>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<LogMessage_101> _parser = new pb::MessageParser<LogMessage_101>(() => new LogMessage_101());
  private pb::UnknownFieldSet _unknownFields;
  private int _hasBits0;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<LogMessage_101> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::LynxaDeviceMessagesReflection.Descriptor.MessageTypes[1]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public LogMessage_101() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public LogMessage_101(LogMessage_101 other) : this() {
    _hasBits0 = other._hasBits0;
    timestamp_ = other.timestamp_;
    logMessage_ = other.logMessage_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public LogMessage_101 Clone() {
    return new LogMessage_101(this);
  }

  /// <summary>Field number for the "timestamp" field.</summary>
  public const int TimestampFieldNumber = 1;
  private readonly static uint TimestampDefaultValue = 0;

  private uint timestamp_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public uint Timestamp {
    get { if ((_hasBits0 & 1) != 0) { return timestamp_; } else { return TimestampDefaultValue; } }
    set {
      _hasBits0 |= 1;
      timestamp_ = value;
    }
  }
  /// <summary>Gets whether the "timestamp" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool HasTimestamp {
    get { return (_hasBits0 & 1) != 0; }
  }
  /// <summary>Clears the value of the "timestamp" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void ClearTimestamp() {
    _hasBits0 &= ~1;
  }

  /// <summary>Field number for the "logMessage" field.</summary>
  public const int LogMessageFieldNumber = 2;
  private readonly static string LogMessageDefaultValue = "";

  private string logMessage_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string LogMessage {
    get { return logMessage_ ?? LogMessageDefaultValue; }
    set {
      logMessage_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }
  /// <summary>Gets whether the "logMessage" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool HasLogMessage {
    get { return logMessage_ != null; }
  }
  /// <summary>Clears the value of the "logMessage" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void ClearLogMessage() {
    logMessage_ = null;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as LogMessage_101);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(LogMessage_101 other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (Timestamp != other.Timestamp) return false;
    if (LogMessage != other.LogMessage) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (HasTimestamp) hash ^= Timestamp.GetHashCode();
    if (HasLogMessage) hash ^= LogMessage.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (HasTimestamp) {
      output.WriteRawTag(8);
      output.WriteUInt32(Timestamp);
    }
    if (HasLogMessage) {
      output.WriteRawTag(18);
      output.WriteString(LogMessage);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (HasTimestamp) {
      output.WriteRawTag(8);
      output.WriteUInt32(Timestamp);
    }
    if (HasLogMessage) {
      output.WriteRawTag(18);
      output.WriteString(LogMessage);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (HasTimestamp) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Timestamp);
    }
    if (HasLogMessage) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(LogMessage);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(LogMessage_101 other) {
    if (other == null) {
      return;
    }
    if (other.HasTimestamp) {
      Timestamp = other.Timestamp;
    }
    if (other.HasLogMessage) {
      LogMessage = other.LogMessage;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          Timestamp = input.ReadUInt32();
          break;
        }
        case 18: {
          LogMessage = input.ReadString();
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 8: {
          Timestamp = input.ReadUInt32();
          break;
        }
        case 18: {
          LogMessage = input.ReadString();
          break;
        }
      }
    }
  }
  #endif

}

public sealed partial class WifiStation : pb::IMessage<WifiStation>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<WifiStation> _parser = new pb::MessageParser<WifiStation>(() => new WifiStation());
  private pb::UnknownFieldSet _unknownFields;
  private int _hasBits0;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<WifiStation> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::LynxaDeviceMessagesReflection.Descriptor.MessageTypes[2]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public WifiStation() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public WifiStation(WifiStation other) : this() {
    _hasBits0 = other._hasBits0;
    bssid_ = other.bssid_;
    rssi_ = other.rssi_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public WifiStation Clone() {
    return new WifiStation(this);
  }

  /// <summary>Field number for the "bssid" field.</summary>
  public const int BssidFieldNumber = 1;
  private readonly static pb::ByteString BssidDefaultValue = pb::ByteString.Empty;

  private pb::ByteString bssid_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pb::ByteString Bssid {
    get { return bssid_ ?? BssidDefaultValue; }
    set {
      bssid_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }
  /// <summary>Gets whether the "bssid" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool HasBssid {
    get { return bssid_ != null; }
  }
  /// <summary>Clears the value of the "bssid" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void ClearBssid() {
    bssid_ = null;
  }

  /// <summary>Field number for the "rssi" field.</summary>
  public const int RssiFieldNumber = 2;
  private readonly static int RssiDefaultValue = 0;

  private int rssi_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int Rssi {
    get { if ((_hasBits0 & 1) != 0) { return rssi_; } else { return RssiDefaultValue; } }
    set {
      _hasBits0 |= 1;
      rssi_ = value;
    }
  }
  /// <summary>Gets whether the "rssi" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool HasRssi {
    get { return (_hasBits0 & 1) != 0; }
  }
  /// <summary>Clears the value of the "rssi" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void ClearRssi() {
    _hasBits0 &= ~1;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as WifiStation);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(WifiStation other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (Bssid != other.Bssid) return false;
    if (Rssi != other.Rssi) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (HasBssid) hash ^= Bssid.GetHashCode();
    if (HasRssi) hash ^= Rssi.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (HasBssid) {
      output.WriteRawTag(10);
      output.WriteBytes(Bssid);
    }
    if (HasRssi) {
      output.WriteRawTag(16);
      output.WriteInt32(Rssi);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (HasBssid) {
      output.WriteRawTag(10);
      output.WriteBytes(Bssid);
    }
    if (HasRssi) {
      output.WriteRawTag(16);
      output.WriteInt32(Rssi);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (HasBssid) {
      size += 1 + pb::CodedOutputStream.ComputeBytesSize(Bssid);
    }
    if (HasRssi) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(Rssi);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(WifiStation other) {
    if (other == null) {
      return;
    }
    if (other.HasBssid) {
      Bssid = other.Bssid;
    }
    if (other.HasRssi) {
      Rssi = other.Rssi;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          Bssid = input.ReadBytes();
          break;
        }
        case 16: {
          Rssi = input.ReadInt32();
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 10: {
          Bssid = input.ReadBytes();
          break;
        }
        case 16: {
          Rssi = input.ReadInt32();
          break;
        }
      }
    }
  }
  #endif

}

public sealed partial class CellTower : pb::IMessage<CellTower>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<CellTower> _parser = new pb::MessageParser<CellTower>(() => new CellTower());
  private pb::UnknownFieldSet _unknownFields;
  private int _hasBits0;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<CellTower> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::LynxaDeviceMessagesReflection.Descriptor.MessageTypes[3]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CellTower() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CellTower(CellTower other) : this() {
    _hasBits0 = other._hasBits0;
    temp1_ = other.temp1_;
    temp2_ = other.temp2_;
    temp3_ = other.temp3_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CellTower Clone() {
    return new CellTower(this);
  }

  /// <summary>Field number for the "temp1" field.</summary>
  public const int Temp1FieldNumber = 1;
  private readonly static int Temp1DefaultValue = 0;

  private int temp1_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int Temp1 {
    get { if ((_hasBits0 & 1) != 0) { return temp1_; } else { return Temp1DefaultValue; } }
    set {
      _hasBits0 |= 1;
      temp1_ = value;
    }
  }
  /// <summary>Gets whether the "temp1" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool HasTemp1 {
    get { return (_hasBits0 & 1) != 0; }
  }
  /// <summary>Clears the value of the "temp1" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void ClearTemp1() {
    _hasBits0 &= ~1;
  }

  /// <summary>Field number for the "temp2" field.</summary>
  public const int Temp2FieldNumber = 2;
  private readonly static int Temp2DefaultValue = 0;

  private int temp2_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int Temp2 {
    get { if ((_hasBits0 & 2) != 0) { return temp2_; } else { return Temp2DefaultValue; } }
    set {
      _hasBits0 |= 2;
      temp2_ = value;
    }
  }
  /// <summary>Gets whether the "temp2" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool HasTemp2 {
    get { return (_hasBits0 & 2) != 0; }
  }
  /// <summary>Clears the value of the "temp2" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void ClearTemp2() {
    _hasBits0 &= ~2;
  }

  /// <summary>Field number for the "temp3" field.</summary>
  public const int Temp3FieldNumber = 3;
  private readonly static int Temp3DefaultValue = 0;

  private int temp3_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int Temp3 {
    get { if ((_hasBits0 & 4) != 0) { return temp3_; } else { return Temp3DefaultValue; } }
    set {
      _hasBits0 |= 4;
      temp3_ = value;
    }
  }
  /// <summary>Gets whether the "temp3" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool HasTemp3 {
    get { return (_hasBits0 & 4) != 0; }
  }
  /// <summary>Clears the value of the "temp3" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void ClearTemp3() {
    _hasBits0 &= ~4;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as CellTower);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(CellTower other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (Temp1 != other.Temp1) return false;
    if (Temp2 != other.Temp2) return false;
    if (Temp3 != other.Temp3) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (HasTemp1) hash ^= Temp1.GetHashCode();
    if (HasTemp2) hash ^= Temp2.GetHashCode();
    if (HasTemp3) hash ^= Temp3.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (HasTemp1) {
      output.WriteRawTag(8);
      output.WriteInt32(Temp1);
    }
    if (HasTemp2) {
      output.WriteRawTag(16);
      output.WriteInt32(Temp2);
    }
    if (HasTemp3) {
      output.WriteRawTag(24);
      output.WriteInt32(Temp3);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (HasTemp1) {
      output.WriteRawTag(8);
      output.WriteInt32(Temp1);
    }
    if (HasTemp2) {
      output.WriteRawTag(16);
      output.WriteInt32(Temp2);
    }
    if (HasTemp3) {
      output.WriteRawTag(24);
      output.WriteInt32(Temp3);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (HasTemp1) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(Temp1);
    }
    if (HasTemp2) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(Temp2);
    }
    if (HasTemp3) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(Temp3);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(CellTower other) {
    if (other == null) {
      return;
    }
    if (other.HasTemp1) {
      Temp1 = other.Temp1;
    }
    if (other.HasTemp2) {
      Temp2 = other.Temp2;
    }
    if (other.HasTemp3) {
      Temp3 = other.Temp3;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          Temp1 = input.ReadInt32();
          break;
        }
        case 16: {
          Temp2 = input.ReadInt32();
          break;
        }
        case 24: {
          Temp3 = input.ReadInt32();
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 8: {
          Temp1 = input.ReadInt32();
          break;
        }
        case 16: {
          Temp2 = input.ReadInt32();
          break;
        }
        case 24: {
          Temp3 = input.ReadInt32();
          break;
        }
      }
    }
  }
  #endif

}

public sealed partial class GoogleLocationServices_102 : pb::IMessage<GoogleLocationServices_102>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<GoogleLocationServices_102> _parser = new pb::MessageParser<GoogleLocationServices_102>(() => new GoogleLocationServices_102());
  private pb::UnknownFieldSet _unknownFields;
  private int _hasBits0;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<GoogleLocationServices_102> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::LynxaDeviceMessagesReflection.Descriptor.MessageTypes[4]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public GoogleLocationServices_102() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public GoogleLocationServices_102(GoogleLocationServices_102 other) : this() {
    _hasBits0 = other._hasBits0;
    timestamp_ = other.timestamp_;
    celltower_ = other.celltower_ != null ? other.celltower_.Clone() : null;
    wifistations_ = other.wifistations_.Clone();
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public GoogleLocationServices_102 Clone() {
    return new GoogleLocationServices_102(this);
  }

  /// <summary>Field number for the "timestamp" field.</summary>
  public const int TimestampFieldNumber = 1;
  private readonly static uint TimestampDefaultValue = 0;

  private uint timestamp_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public uint Timestamp {
    get { if ((_hasBits0 & 1) != 0) { return timestamp_; } else { return TimestampDefaultValue; } }
    set {
      _hasBits0 |= 1;
      timestamp_ = value;
    }
  }
  /// <summary>Gets whether the "timestamp" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool HasTimestamp {
    get { return (_hasBits0 & 1) != 0; }
  }
  /// <summary>Clears the value of the "timestamp" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void ClearTimestamp() {
    _hasBits0 &= ~1;
  }

  /// <summary>Field number for the "celltower" field.</summary>
  public const int CelltowerFieldNumber = 2;
  private global::CellTower celltower_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::CellTower Celltower {
    get { return celltower_; }
    set {
      celltower_ = value;
    }
  }

  /// <summary>Field number for the "wifistations" field.</summary>
  public const int WifistationsFieldNumber = 3;
  private static readonly pb::FieldCodec<global::WifiStation> _repeated_wifistations_codec
      = pb::FieldCodec.ForMessage(26, global::WifiStation.Parser);
  private readonly pbc::RepeatedField<global::WifiStation> wifistations_ = new pbc::RepeatedField<global::WifiStation>();
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pbc::RepeatedField<global::WifiStation> Wifistations {
    get { return wifistations_; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as GoogleLocationServices_102);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(GoogleLocationServices_102 other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (Timestamp != other.Timestamp) return false;
    if (!object.Equals(Celltower, other.Celltower)) return false;
    if(!wifistations_.Equals(other.wifistations_)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (HasTimestamp) hash ^= Timestamp.GetHashCode();
    if (celltower_ != null) hash ^= Celltower.GetHashCode();
    hash ^= wifistations_.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (HasTimestamp) {
      output.WriteRawTag(8);
      output.WriteUInt32(Timestamp);
    }
    if (celltower_ != null) {
      output.WriteRawTag(18);
      output.WriteMessage(Celltower);
    }
    wifistations_.WriteTo(output, _repeated_wifistations_codec);
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (HasTimestamp) {
      output.WriteRawTag(8);
      output.WriteUInt32(Timestamp);
    }
    if (celltower_ != null) {
      output.WriteRawTag(18);
      output.WriteMessage(Celltower);
    }
    wifistations_.WriteTo(ref output, _repeated_wifistations_codec);
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (HasTimestamp) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Timestamp);
    }
    if (celltower_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(Celltower);
    }
    size += wifistations_.CalculateSize(_repeated_wifistations_codec);
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(GoogleLocationServices_102 other) {
    if (other == null) {
      return;
    }
    if (other.HasTimestamp) {
      Timestamp = other.Timestamp;
    }
    if (other.celltower_ != null) {
      if (celltower_ == null) {
        Celltower = new global::CellTower();
      }
      Celltower.MergeFrom(other.Celltower);
    }
    wifistations_.Add(other.wifistations_);
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          Timestamp = input.ReadUInt32();
          break;
        }
        case 18: {
          if (celltower_ == null) {
            Celltower = new global::CellTower();
          }
          input.ReadMessage(Celltower);
          break;
        }
        case 26: {
          wifistations_.AddEntriesFrom(input, _repeated_wifistations_codec);
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 8: {
          Timestamp = input.ReadUInt32();
          break;
        }
        case 18: {
          if (celltower_ == null) {
            Celltower = new global::CellTower();
          }
          input.ReadMessage(Celltower);
          break;
        }
        case 26: {
          wifistations_.AddEntriesFrom(ref input, _repeated_wifistations_codec);
          break;
        }
      }
    }
  }
  #endif

}

#endregion


#endregion Designer generated code
